Index: squid/helpers/basic_auth/MSNT/smblib.c
diff -c squid/helpers/basic_auth/MSNT/smblib.c:1.1.2.3 squid/helpers/basic_auth/MSNT/smblib.c:1.1.2.4
*** squid/helpers/basic_auth/MSNT/smblib.c:1.1.2.3	Wed Mar  9 07:28:32 2005
--- squid/helpers/basic_auth/MSNT/smblib.c	Thu Jun 30 12:50:55 2005
***************
*** 127,138 ****
       * service we are going to call, sine some servers want it in uppercase */
  
      for (i = 0; i < strlen(server); i++)
! 	called[i] = toupper(server[i]);
  
      called[strlen(server)] = 0;	/* Make it a string */
  
      for (i = 0; i < strlen(con->myname); i++)
! 	calling[i] = toupper(con->myname[i]);
  
      calling[strlen(con->myname)] = 0;	/* Make it a string */
  
--- 127,138 ----
       * service we are going to call, sine some servers want it in uppercase */
  
      for (i = 0; i < strlen(server); i++)
! 	called[i] = xtoupper(server[i]);
  
      called[strlen(server)] = 0;	/* Make it a string */
  
      for (i = 0; i < strlen(con->myname); i++)
! 	calling[i] = xtoupper(con->myname[i]);
  
      calling[strlen(con->myname)] = 0;	/* Make it a string */
  
***************
*** 229,240 ****
       * service we are going to call, sine some servers want it in uppercase */
  
      for (i = 0; i < strlen(host); i++)
! 	called[i] = toupper(host[i]);
  
      called[strlen(host)] = 0;	/* Make it a string */
  
      for (i = 0; i < strlen(con->myname); i++)
! 	calling[i] = toupper(con->myname[i]);
  
      calling[strlen(con->myname)] = 0;	/* Make it a string */
  
--- 229,240 ----
       * service we are going to call, sine some servers want it in uppercase */
  
      for (i = 0; i < strlen(host); i++)
! 	called[i] = xtoupper(host[i]);
  
      called[strlen(host)] = 0;	/* Make it a string */
  
      for (i = 0; i < strlen(con->myname); i++)
! 	calling[i] = xtoupper(con->myname[i]);
  
      calling[strlen(con->myname)] = 0;	/* Make it a string */
  
Index: squid/helpers/basic_auth/MSNT/smblib.h
diff -c squid/helpers/basic_auth/MSNT/smblib.h:1.1.2.1 squid/helpers/basic_auth/MSNT/smblib.h:1.1.2.2
*** squid/helpers/basic_auth/MSNT/smblib.h:1.1.2.1	Wed Jun 26 13:11:17 2002
--- squid/helpers/basic_auth/MSNT/smblib.h	Thu Jun 30 12:50:55 2005
***************
*** 23,28 ****
--- 23,29 ----
   * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   */
  
+ #include "util.h"
  #include "std-defines.h"
  #include "smblib-common.h"
  
Index: squid/helpers/external_acl/winbind_group/wb_check_group.c
diff -c squid/helpers/external_acl/winbind_group/wb_check_group.c:1.2.2.11 squid/helpers/external_acl/winbind_group/wb_check_group.c:1.2.2.12
*** squid/helpers/external_acl/winbind_group/wb_check_group.c:1.2.2.11	Fri Mar 25 19:50:50 2005
--- squid/helpers/external_acl/winbind_group/wb_check_group.c	Thu Jun 30 12:50:55 2005
***************
*** 127,133 ****
  
  static int strCaseCmp (const char *s1, const char *s2)
  {
!     while (*s1 && toupper (*s1) == toupper (*s2)) s1++, s2++;
      return *s1 - *s2;
  }
  
--- 127,133 ----
  
  static int strCaseCmp (const char *s1, const char *s2)
  {
!     while (*s1 && xtoupper (*s1) == xtoupper (*s2)) s1++, s2++;
      return *s1 - *s2;
  }
  
Index: squid/helpers/ntlm_auth/SMB/ntlm_auth.c
diff -c squid/helpers/ntlm_auth/SMB/ntlm_auth.c:1.12.2.2 squid/helpers/ntlm_auth/SMB/ntlm_auth.c:1.12.2.3
*** squid/helpers/ntlm_auth/SMB/ntlm_auth.c:1.12.2.2	Wed Mar  9 07:30:37 2005
--- squid/helpers/ntlm_auth/SMB/ntlm_auth.c	Thu Jun 30 12:50:55 2005
***************
*** 81,87 ****
  {
      char *p = string, c;
      while ((c = *p)) {
! 	*p = toupper(c);
  	p++;
      }
  }
--- 81,87 ----
  {
      char *p = string, c;
      while ((c = *p)) {
! 	*p = xtoupper(c);
  	p++;
      }
  }
***************
*** 92,98 ****
  {
      char *p = string, c;
      while ((c = *p)) {
! 	*p = tolower(c);
  	p++;
      }
  }
--- 92,98 ----
  {
      char *p = string, c;
      while ((c = *p)) {
! 	*p = xtolower(c);
  	p++;
      }
  }
Index: squid/helpers/ntlm_auth/SMB/smbval/smbencrypt.c
diff -c squid/helpers/ntlm_auth/SMB/smbval/smbencrypt.c:1.3.2.2 squid/helpers/ntlm_auth/SMB/smbval/smbencrypt.c:1.3.2.3
*** squid/helpers/ntlm_auth/SMB/smbval/smbencrypt.c:1.3.2.2	Wed Mar  9 07:33:01 2005
--- squid/helpers/ntlm_auth/SMB/smbval/smbencrypt.c	Thu Jun 30 12:50:55 2005
***************
*** 200,206 ****
  	 * #endif *//* KANJI_WIN95_COMPATIBILITY */
  	{
  	    if (islower((int)(unsigned char)*s))
! 		*s = toupper(*s);
  	    s++;
  	}
      }
--- 200,206 ----
  	 * #endif *//* KANJI_WIN95_COMPATIBILITY */
  	{
  	    if (islower((int)(unsigned char)*s))
! 		*s = xtoupper(*s);
  	    s++;
  	}
      }
Index: squid/helpers/ntlm_auth/SMB/smbval/smblib.c
diff -c squid/helpers/ntlm_auth/SMB/smbval/smblib.c:1.3.2.2 squid/helpers/ntlm_auth/SMB/smbval/smblib.c:1.3.2.3
*** squid/helpers/ntlm_auth/SMB/smbval/smblib.c:1.3.2.2	Wed Mar  9 07:28:32 2005
--- squid/helpers/ntlm_auth/SMB/smbval/smblib.c	Thu Jun 30 12:50:55 2005
***************
*** 170,181 ****
       * service we are going to call, sine some servers want it in uppercase */
  
      for (i = 0; i < strlen(server); i++)
! 	called[i] = toupper(server[i]);
  
      called[strlen(server)] = 0;	/* Make it a string */
  
      for (i = 0; i < strlen(con->myname); i++)
! 	calling[i] = toupper(con->myname[i]);
  
      calling[strlen(con->myname)] = 0;	/* Make it a string */
  
--- 170,181 ----
       * service we are going to call, sine some servers want it in uppercase */
  
      for (i = 0; i < strlen(server); i++)
! 	called[i] = xtoupper(server[i]);
  
      called[strlen(server)] = 0;	/* Make it a string */
  
      for (i = 0; i < strlen(con->myname); i++)
! 	calling[i] = xtoupper(con->myname[i]);
  
      calling[strlen(con->myname)] = 0;	/* Make it a string */
  
***************
*** 271,282 ****
       * service we are going to call, sine some servers want it in uppercase */
  
      for (i = 0; i < strlen(host); i++)
! 	called[i] = toupper(host[i]);
  
      called[strlen(host)] = 0;	/* Make it a string */
  
      for (i = 0; i < strlen(con->myname); i++)
! 	calling[i] = toupper(con->myname[i]);
  
      calling[strlen(con->myname)] = 0;	/* Make it a string */
  
--- 271,282 ----
       * service we are going to call, sine some servers want it in uppercase */
  
      for (i = 0; i < strlen(host); i++)
! 	called[i] = xtoupper(host[i]);
  
      called[strlen(host)] = 0;	/* Make it a string */
  
      for (i = 0; i < strlen(con->myname); i++)
! 	calling[i] = xtoupper(con->myname[i]);
  
      calling[strlen(con->myname)] = 0;	/* Make it a string */
  
Index: squid/helpers/ntlm_auth/SMB/smbval/std-includes.h
diff -c squid/helpers/ntlm_auth/SMB/smbval/std-includes.h:1.2 squid/helpers/ntlm_auth/SMB/smbval/std-includes.h:1.2.2.1
*** squid/helpers/ntlm_auth/SMB/smbval/std-includes.h:1.2	Fri Mar  9 17:55:38 2001
--- squid/helpers/ntlm_auth/SMB/smbval/std-includes.h	Thu Jun 30 12:50:55 2005
***************
*** 25,30 ****
--- 25,31 ----
  
  /* the types are provided by squid's configure preocess */
  #include "squid_types.h"
+ #include "util.h"
  #define BOOL int16_t
  #define int16 int16_t
  
Index: squid/helpers/ntlm_auth/fakeauth/fakeauth_auth.c
diff -c squid/helpers/ntlm_auth/fakeauth/fakeauth_auth.c:1.3.2.8 squid/helpers/ntlm_auth/fakeauth/fakeauth_auth.c:1.3.2.9
*** squid/helpers/ntlm_auth/fakeauth/fakeauth_auth.c:1.3.2.8	Wed Mar  9 07:33:01 2005
--- squid/helpers/ntlm_auth/fakeauth/fakeauth_auth.c	Thu Jun 30 12:50:55 2005
***************
*** 57,63 ****
      char *p = string;
      char c;
      while ((c = *p)) {
! 	*p = tolower(c);
  	p++;
      }
  }
--- 57,63 ----
      char *p = string;
      char c;
      while ((c = *p)) {
! 	*p = xtolower(c);
  	p++;
      }
  }
Index: squid/helpers/ntlm_auth/winbind/wb_ntlm_auth.c
diff -c squid/helpers/ntlm_auth/winbind/wb_ntlm_auth.c:1.1.2.8 squid/helpers/ntlm_auth/winbind/wb_ntlm_auth.c:1.1.2.9
*** squid/helpers/ntlm_auth/winbind/wb_ntlm_auth.c:1.1.2.8	Sun Feb 20 12:07:45 2005
--- squid/helpers/ntlm_auth/winbind/wb_ntlm_auth.c	Thu Jun 30 12:50:56 2005
***************
*** 87,93 ****
  {
      char *p = string, c;
      while ((c = *p)) {
! 	*p = tolower(c);
  	p++;
      }
  }
--- 87,93 ----
  {
      char *p = string, c;
      while ((c = *p)) {
! 	*p = xtolower(c);
  	p++;
      }
  }
***************
*** 97,103 ****
  {
      char *p = string, c;
      while ((c = *p)) {
! 	*p = toupper(c);
  	p++;
      }
  }
--- 97,103 ----
  {
      char *p = string, c;
      while ((c = *p)) {
! 	*p = xtoupper(c);
  	p++;
      }
  }
Index: squid/lib/Array.c
diff -c squid/lib/Array.c:1.7.2.1 squid/lib/Array.c:1.7.2.2
*** squid/lib/Array.c:1.7.2.1	Thu Jun  9 01:51:46 2005
--- squid/lib/Array.c	Thu Jun 30 12:50:56 2005
***************
*** 65,78 ****
  void
  arrayInit(Array * a)
  {
!     assert(a);
      memset(a, 0, sizeof(Array));
  }
  
  void
  arrayClean(Array * a)
  {
!     assert(a);
      /* could also warn if some objects are left */
      xfree(a->items);
      a->items = NULL;
--- 65,78 ----
  void
  arrayInit(Array * a)
  {
!     assert(a != NULL);
      memset(a, 0, sizeof(Array));
  }
  
  void
  arrayClean(Array * a)
  {
!     assert(a != NULL);
      /* could also warn if some objects are left */
      xfree(a->items);
      a->items = NULL;
***************
*** 81,87 ****
  void
  arrayDestroy(Array * a)
  {
!     assert(a);
      arrayClean(a);
      xfree(a);
  }
--- 81,87 ----
  void
  arrayDestroy(Array * a)
  {
!     assert(a != NULL);
      arrayClean(a);
      xfree(a);
  }
***************
*** 89,95 ****
  void
  arrayAppend(Array * a, void *obj)
  {
!     assert(a);
      if (a->count >= a->capacity)
  	arrayGrow(a, a->count + 1);
      a->items[a->count++] = obj;
--- 89,95 ----
  void
  arrayAppend(Array * a, void *obj)
  {
!     assert(a != NULL);
      if (a->count >= a->capacity)
  	arrayGrow(a, a->count + 1);
      a->items[a->count++] = obj;
***************
*** 97,103 ****
  
  void arrayInsert(Array *a, void *obj, int position)
  {
!     assert(a);
      if (a->count >= a->capacity)
  	arrayGrow(a, a->count + 1);
      if (position > a->count)
--- 97,103 ----
  
  void arrayInsert(Array *a, void *obj, int position)
  {
!     assert(a != NULL);
      if (a->count >= a->capacity)
  	arrayGrow(a, a->count + 1);
      if (position > a->count)
***************
*** 112,118 ****
  void
  arrayPreAppend(Array * a, int app_count)
  {
!     assert(a);
      if (a->count + app_count > a->capacity)
  	arrayGrow(a, a->count + app_count);
  }
--- 112,118 ----
  void
  arrayPreAppend(Array * a, int app_count)
  {
!     assert(a != NULL);
      if (a->count + app_count > a->capacity)
  	arrayGrow(a, a->count + app_count);
  }
Index: squid/lib/Stack.c
diff -c squid/lib/Stack.c:1.11 squid/lib/Stack.c:1.11.2.1
*** squid/lib/Stack.c:1.11	Thu Jan 11 17:37:12 2001
--- squid/lib/Stack.c	Thu Jun 30 12:50:56 2005
***************
*** 50,62 ****
  void *
  stackPop(Stack * s)
  {
!     assert(s);
      return s->count ? s->items[--s->count] : NULL;
  }
  
  void *
  stackTop(Stack * s)
  {
!     assert(s);
      return s->count ? s->items[s->count - 1] : NULL;
  }
--- 50,62 ----
  void *
  stackPop(Stack * s)
  {
!     assert(s != NULL);
      return s->count ? s->items[--s->count] : NULL;
  }
  
  void *
  stackTop(Stack * s)
  {
!     assert(s != NULL);
      return s->count ? s->items[s->count - 1] : NULL;
  }
Index: squid/lib/hash.c
diff -c squid/lib/hash.c:1.12 squid/lib/hash.c:1.12.2.1
*** squid/lib/hash.c:1.12	Wed Mar  7 10:57:37 2001
--- squid/lib/hash.c	Thu Jun 30 12:50:56 2005
***************
*** 239,245 ****
  void
  hash_last(hash_table * hid)
  {
!     assert(hid);
      hid->next = NULL;
      hid->current_slot = 0;
  }
--- 239,245 ----
  void
  hash_last(hash_table * hid)
  {
!     assert(hid != NULL);
      hid->next = NULL;
      hid->current_slot = 0;
  }
***************
*** 307,313 ****
  void
  hashFreeMemory(hash_table * hid)
  {
!     assert(hid);
      if (hid->buckets)
  	xfree(hid->buckets);
      xfree(hid);
--- 307,313 ----
  void
  hashFreeMemory(hash_table * hid)
  {
!     assert(hid != NULL);
      if (hid->buckets)
  	xfree(hid->buckets);
      xfree(hid);
Index: squid/lib/heap.c
diff -c squid/lib/heap.c:1.8 squid/lib/heap.c:1.8.2.1
*** squid/lib/heap.c:1.8	Wed Feb  7 11:56:50 2001
--- squid/lib/heap.c	Thu Jun 30 12:50:56 2005
***************
*** 122,128 ****
  delete_heap(heap * hp)
  {
      int i;
!     assert(hp);
      for (i = 0; i < hp->last; i++) {
  	xfree(hp->nodes[i]);
      }
--- 122,128 ----
  delete_heap(heap * hp)
  {
      int i;
!     assert(hp != NULL);
      for (i = 0; i < hp->last; i++) {
  	xfree(hp->nodes[i]);
      }
Index: squid/lib/rfc1123.c
diff -c squid/lib/rfc1123.c:1.29.2.2 squid/lib/rfc1123.c:1.29.2.3
*** squid/lib/rfc1123.c:1.29.2.2	Wed Mar  9 07:51:39 2005
--- squid/lib/rfc1123.c	Sun Jul  3 02:18:38 2005
***************
*** 230,236 ****
  #elif defined(_SQUID_AIX_)
  #elif defined(_SQUID_CYGWIN_)
  #else
! 	extern time_t timezone;
  #endif
  	/*
  	 * The following assumes a fixed DST offset of 1 hour,
--- 230,236 ----
  #elif defined(_SQUID_AIX_)
  #elif defined(_SQUID_CYGWIN_)
  #else
! 	extern long timezone;
  #endif
  	/*
  	 * The following assumes a fixed DST offset of 1 hour,
Index: squid/lib/util.c
diff -c squid/lib/util.c:1.83.2.2 squid/lib/util.c:1.83.2.3
*** squid/lib/util.c:1.83.2.2	Sun Aug 11 19:22:37 2002
--- squid/lib/util.c	Thu Jun 30 12:50:56 2005
***************
*** 608,614 ****
  xstrndup(const char *s, size_t n)
  {
      size_t sz;
!     assert(s);
      assert(n);
      sz = strlen(s) + 1;
      if (sz > n)
--- 608,614 ----
  xstrndup(const char *s, size_t n)
  {
      size_t sz;
!     assert(s != NULL);
      assert(n);
      sz = strlen(s) + 1;
      if (sz > n)
Index: squid/snmplib/mib.c
diff -c squid/snmplib/mib.c:1.22.2.1 squid/snmplib/mib.c:1.22.2.2
*** squid/snmplib/mib.c:1.22.2.1	Wed Mar  9 07:33:02 2005
--- squid/snmplib/mib.c	Thu Jun 30 12:50:56 2005
***************
*** 128,138 ****
  
      while (*s1 && *s2) {
  	if (xisupper(*s1))
! 	    c1 = tolower(*s1);
  	else
  	    c1 = *s1;
  	if (xisupper(*s2))
! 	    c2 = tolower(*s2);
  	else
  	    c2 = *s2;
  	if (c1 != c2)
--- 128,138 ----
  
      while (*s1 && *s2) {
  	if (xisupper(*s1))
! 	    c1 = xtolower(*s1);
  	else
  	    c1 = *s1;
  	if (xisupper(*s2))
! 	    c2 = xtolower(*s2);
  	else
  	    c2 = *s2;
  	if (c1 != c2)
Index: squid/snmplib/parse.c
diff -c squid/snmplib/parse.c:1.26.2.1 squid/snmplib/parse.c:1.26.2.2
*** squid/snmplib/parse.c:1.26.2.1	Wed Mar  9 07:33:02 2005
--- squid/snmplib/parse.c	Thu Jun 30 12:50:56 2005
***************
*** 135,141 ****
  #define	WRITEONLY   20
  #undef NOACCESS
  #define NOACCESS    21
! #define STATUS	    22
  #define MANDATORY   23
  #define OPTIONAL    24
  #define OBSOLETE    25
--- 135,141 ----
  #define	WRITEONLY   20
  #undef NOACCESS
  #define NOACCESS    21
! #define SNMP_STATUS	22
  #define MANDATORY   23
  #define OPTIONAL    24
  #define OBSOLETE    25
***************
*** 193,199 ****
      {"read-only", sizeof("read-only") - 1, READONLY},
      {"ACCESS", sizeof("ACCESS") - 1, ACCESS},
      {"MAX-ACCESS", sizeof("MAX-ACCESS") - 1, ACCESS},
!     {"STATUS", sizeof("STATUS") - 1, STATUS},
      {"SYNTAX", sizeof("SYNTAX") - 1, SYNTAX},
      {"OBJECT-TYPE", sizeof("OBJECT-TYPE") - 1, OBJTYPE},
      {"{", sizeof("{") - 1, LEFTBRACKET},
--- 193,199 ----
      {"read-only", sizeof("read-only") - 1, READONLY},
      {"ACCESS", sizeof("ACCESS") - 1, ACCESS},
      {"MAX-ACCESS", sizeof("MAX-ACCESS") - 1, ACCESS},
!     {"STATUS", sizeof("STATUS") - 1, SNMP_STATUS},
      {"SYNTAX", sizeof("SYNTAX") - 1, SYNTAX},
      {"OBJECT-TYPE", sizeof("OBJECT-TYPE") - 1, OBJTYPE},
      {"{", sizeof("{") - 1, LEFTBRACKET},
***************
*** 867,873 ****
  	return 0;
      }
      type = get_token(fp, token);
!     if (type != STATUS) {
  	print_error("Should be STATUS", token, nexttype);
  	free_node(np);
  	return 0;
--- 867,873 ----
  	return 0;
      }
      type = get_token(fp, token);
!     if (type != SNMP_STATUS) {
  	print_error("Should be STATUS", token, nexttype);
  	free_node(np);
  	return 0;
Index: squid/src/cf_gen.c
diff -c squid/src/cf_gen.c:1.43.2.2 squid/src/cf_gen.c:1.43.2.3
*** squid/src/cf_gen.c:1.43.2.2	Thu Aug 22 06:28:15 2002
--- squid/src/cf_gen.c	Thu Jun 30 12:50:56 2005
***************
*** 403,409 ****
  	"\tconfig_lineno = 0;\n"
  	);
      for (entry = head; entry != NULL; entry = entry->next) {
! 	assert(entry->name);
  	assert(entry != entry->next);
  
  	if (!strcmp(entry->name, "comment"))
--- 403,409 ----
  	"\tconfig_lineno = 0;\n"
  	);
      for (entry = head; entry != NULL; entry = entry->next) {
! 	assert(entry->name != NULL);
  	assert(entry != entry->next);
  
  	if (!strcmp(entry->name, "comment"))
***************
*** 418,424 ****
  	    rc |= 1;
  	    continue;
  	}
! 	assert(entry->default_value);
  	if (entry->ifdef)
  	    fprintf(fp, "#if %s\n", entry->ifdef);
  	if (strcmp(entry->default_value, "none") == 0) {
--- 418,424 ----
  	    rc |= 1;
  	    continue;
  	}
! 	assert(entry->default_value != NULL);
  	if (entry->ifdef)
  	    fprintf(fp, "#if %s\n", entry->ifdef);
  	if (strcmp(entry->default_value, "none") == 0) {
***************
*** 447,454 ****
  	"{\n"
  	);
      for (entry = head; entry != NULL; entry = entry->next) {
! 	assert(entry->name);
! 	assert(entry->loc);
  	if (entry->default_if_none == NULL)
  	    continue;
  	if (entry->ifdef)
--- 447,454 ----
  	"{\n"
  	);
      for (entry = head; entry != NULL; entry = entry->next) {
! 	assert(entry->name != NULL);
! 	assert(entry->loc != NULL);
  	if (entry->default_if_none == NULL)
  	    continue;
  	if (entry->ifdef)
***************
*** 498,504 ****
  	alias = entry->alias;
        next_alias:
  	fprintf(fp, "\telse if (!strcmp(token, \"%s\"))\n", name);
! 	assert(entry->loc);
  	if (strcmp(entry->loc, "none") == 0) {
  	    fprintf(fp,
  		"\t\tparse_%s();\n",
--- 498,504 ----
  	alias = entry->alias;
        next_alias:
  	fprintf(fp, "\telse if (!strcmp(token, \"%s\"))\n", name);
! 	assert(entry->loc != NULL);
  	if (strcmp(entry->loc, "none") == 0) {
  	    fprintf(fp,
  		"\t\tparse_%s();\n",
***************
*** 538,544 ****
  	"{\n"
  	);
      for (entry = head; entry != NULL; entry = entry->next) {
! 	assert(entry->loc);
  	if (strcmp(entry->loc, "none") == 0)
  	    continue;
  	if (strcmp(entry->name, "comment") == 0)
--- 538,544 ----
  	"{\n"
  	);
      for (entry = head; entry != NULL; entry = entry->next) {
! 	assert(entry->loc != NULL);
  	if (strcmp(entry->loc, "none") == 0)
  	    continue;
  	if (strcmp(entry->name, "comment") == 0)
***************
*** 565,571 ****
  	"{\n"
  	);
      for (entry = head; entry != NULL; entry = entry->next) {
! 	assert(entry->loc);
  	if (strcmp(entry->loc, "none") == 0)
  	    continue;
  	if (strcmp(entry->name, "comment") == 0)
--- 565,571 ----
  	"{\n"
  	);
      for (entry = head; entry != NULL; entry = entry->next) {
! 	assert(entry->loc != NULL);
  	if (strcmp(entry->loc, "none") == 0)
  	    continue;
  	if (strcmp(entry->name, "comment") == 0)
***************
*** 588,594 ****
      if (!name)
  	return 1;
      for (i = 0; strcmp(defines[i].name, name) != 0; i++) {
! 	assert(defines[i].name);
      }
      return defines[i].defined;
  }
--- 588,594 ----
      if (!name)
  	return 1;
      for (i = 0; strcmp(defines[i].name, name) != 0; i++) {
! 	assert(defines[i].name != NULL);
      }
      return defines[i].defined;
  }
***************
*** 597,605 ****
  available_if(char *name)
  {
      int i = 0;
!     assert(name);
      for (i = 0; strcmp(defines[i].name, name) != 0; i++) {
! 	assert(defines[i].name);
      }
      return defines[i].enable;
  }
--- 597,605 ----
  available_if(char *name)
  {
      int i = 0;
!     assert(name != NULL);
      for (i = 0; strcmp(defines[i].name, name) != 0; i++) {
! 	assert(defines[i].name != NULL);
      }
      return defines[i].enable;
  }
Index: squid/src/net_db.c
diff -c squid/src/net_db.c:1.158.2.9 squid/src/net_db.c:1.158.2.10
*** squid/src/net_db.c:1.158.2.9	Fri Mar 25 19:50:53 2005
--- squid/src/net_db.c	Thu Jun 30 12:50:56 2005
***************
*** 556,562 ****
      if (0 == ex->used) {
  	/* skip reply headers */
  	if ((hdr_sz = headersEnd(p, size))) {
! 	    debug(38, 5) ("netdbExchangeHandleReply: hdr_sz = %d\n", hdr_sz);
  	    rep = ex->e->mem_obj->reply;
  	    if (0 == rep->sline.status)
  		httpReplyParse(rep, buf, hdr_sz);
--- 556,562 ----
      if (0 == ex->used) {
  	/* skip reply headers */
  	if ((hdr_sz = headersEnd(p, size))) {
! 	    debug(38, 5) ("netdbExchangeHandleReply: hdr_sz = %ld\n", (long int) hdr_sz);
  	    rep = ex->e->mem_obj->reply;
  	    if (0 == rep->sline.status)
  		httpReplyParse(rep, buf, hdr_sz);
***************
*** 574,584 ****
  	    size = 0;
  	}
      }
!     debug(38, 5) ("netdbExchangeHandleReply: start parsing loop, size = %d\n",
! 	size);
      while (size >= rec_sz) {
! 	debug(38, 5) ("netdbExchangeHandleReply: in parsing loop, size = %d\n",
! 	    size);
  	addr.s_addr = any_addr.s_addr;
  	hops = rtt = 0.0;
  	for (o = 0; o < rec_sz;) {
--- 574,584 ----
  	    size = 0;
  	}
      }
!     debug(38, 5) ("netdbExchangeHandleReply: start parsing loop, size = %ld\n",
! 	(long int) size);
      while (size >= rec_sz) {
! 	debug(38, 5) ("netdbExchangeHandleReply: in parsing loop, size = %ld\n",
! 	    (long int) size);
  	addr.s_addr = any_addr.s_addr;
  	hops = rtt = 0.0;
  	for (o = 0; o < rec_sz;) {
