Index: squid/src/client_db.c
diff -c squid/src/client_db.c:1.53 squid/src/client_db.c:1.53.2.1
*** squid/src/client_db.c:1.53	Fri Feb 23 13:59:50 2001
--- squid/src/client_db.c	Sat Jul 17 16:37:30 2004
***************
*** 38,43 ****
--- 38,51 ----
  static hash_table *client_table = NULL;
  static ClientInfo *clientdbAdd(struct in_addr addr);
  static FREE clientdbFreeItem;
+ static void clientdbStartGC(void);
+ 
+ static int max_clients = 32;
+ static int cleanup_running = 0;
+ static int cleanup_scheduled = 0;
+ static int cleanup_removed;
+ 
+ #define CLIENT_DB_HASH_SIZE 467
  
  static ClientInfo *
  clientdbAdd(struct in_addr addr)
***************
*** 48,53 ****
--- 56,63 ----
      c->addr = addr;
      hash_join(client_table, &c->hash);
      statCounter.client_http.clients++;
+     if ((statCounter.client_http.clients > max_clients) && !cleanup_running)
+ 	clientdbStartGC();
      return c;
  }
  
***************
*** 56,62 ****
  {
      if (client_table)
  	return;
!     client_table = hash_create((HASHCMP *) strcmp, 467, hash_string);
      cachemgrRegister("client_list",
  	"Cache Client List",
  	clientdbDump,
--- 66,72 ----
  {
      if (client_table)
  	return;
!     client_table = hash_create((HASHCMP *) strcmp, CLIENT_DB_HASH_SIZE, hash_string);
      cachemgrRegister("client_list",
  	"Cache Client List",
  	clientdbDump,
***************
*** 89,94 ****
--- 99,105 ----
  	if (LOG_UDP_HIT == ltype)
  	    kb_incr(&c->Icp.hit_kbytes_out, size);
      }
+     c->last_seen = squid_curtime;
  }
  
  /*
***************
*** 226,231 ****
--- 237,300 ----
      client_table = NULL;
  }
  
+ static void
+ clientdbScheduledGC(void *unused)
+ {
+     cleanup_scheduled = 0;
+     clientdbStartGC();
+ }
+ 
+ static void
+ clientdbGC(void *unused)
+ {
+     static int bucket = 0;
+     hash_link *link_next;
+ 
+     link_next = hash_get_bucket(client_table, bucket++);
+     while (link_next != NULL) {
+ 	ClientInfo *c = (ClientInfo *) link_next;
+ 	int age = squid_curtime - c->last_seen;
+ 	link_next = link_next->next;
+ 	if (c->n_established)
+ 	    continue;
+ 
+ 	if (age < 24 * 3600 && c->Http.n_requests > 100)
+ 	    continue;
+ 	if (age < 4 * 3600 && (c->Http.n_requests > 10 || c->Icp.n_requests > 10))
+ 	    continue;
+ 	if (age < 5 * 60 && (c->Http.n_requests > 1 || c->Icp.n_requests > 1))
+ 	    continue;
+ 	if (age < 60)
+ 	    continue;
+ 	hash_remove_link(client_table, &c->hash);
+ 	clientdbFreeItem(c);
+ 	statCounter.client_http.clients--;
+ 	cleanup_removed++;
+     }
+ 
+     if (bucket < CLIENT_DB_HASH_SIZE)
+ 	eventAdd("client_db garbage collector", clientdbGC, NULL, 0.15, 0);
+     else {
+ 	bucket = 0;
+ 	cleanup_running = 0;
+ 	max_clients = statCounter.client_http.clients * 3 / 2;
+ 	if (!cleanup_scheduled) {
+ 	    cleanup_scheduled = 1;
+ 	    eventAdd("client_db garbage collector", clientdbScheduledGC, NULL, 6 * 3600, 0);
+ 	}
+ 	debug(49, 1) ("clientdbGC: Removed %d entries\n", cleanup_removed);
+     }
+ }
+ 
+ static void
+ clientdbStartGC(void)
+ {
+     max_clients = statCounter.client_http.clients;
+     cleanup_running = 1;
+     cleanup_removed = 0;
+     clientdbGC(NULL);
+ }
+ 
  #if SQUID_SNMP
  struct in_addr *
  client_entry(struct in_addr *current)
Index: squid/src/structs.h
diff -c squid/src/structs.h:1.408.2.24 squid/src/structs.h:1.408.2.25
*** squid/src/structs.h:1.408.2.24	Sun Apr 18 17:43:30 2004
--- squid/src/structs.h	Sat Jul 17 16:37:30 2004
***************
*** 1940,1945 ****
--- 1940,1946 ----
  	int n_denied;
      } cutoff;
      int n_established;		/* number of current established connections */
+     time_t last_seen;
  };
  
  struct _CacheDigest {
