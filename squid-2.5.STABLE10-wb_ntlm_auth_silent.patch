Index: squid/helpers/ntlm_auth/winbind/wb_ntlm_auth.c
diff -c squid/helpers/ntlm_auth/winbind/wb_ntlm_auth.c:1.1.2.9 squid/helpers/ntlm_auth/winbind/wb_ntlm_auth.c:1.1.2.10
*** squid/helpers/ntlm_auth/winbind/wb_ntlm_auth.c:1.1.2.9	Thu Jun 30 12:50:56 2005
--- squid/helpers/ntlm_auth/winbind/wb_ntlm_auth.c	Sat Jul  9 02:42:49 2005
***************
*** 117,138 ****
      if (have_urandom == DONTKNOW) {
  	int result = 0;
  	struct stat st;
  	result = stat(ENTROPY_SOURCE, &st);
  	if (result != 0 || !(S_ISCHR(st.st_mode) || S_ISBLK(st.st_mode))) {
  	    debug("Entropy source " ENTROPY_SOURCE " is unavailable\n");
  	    have_urandom = NO;
! 	}
! 	if ((urandom_file = fopen(ENTROPY_SOURCE, "r")) == NULL) {
! 	    unsigned int seed;
! 	    struct timeval t;
  	    warn("Can't open entropy source " ENTROPY_SOURCE "\n");
  	    have_urandom = NO;
! 	    gettimeofday(&t, NULL);
! 	    seed = squid_random() * getpid() * t.tv_sec * t.tv_usec;
! 	    squid_srandom(seed);
! 	} else {
  	    have_urandom = YES;
- 	}
      }
  }
  
--- 117,136 ----
      if (have_urandom == DONTKNOW) {
  	int result = 0;
  	struct stat st;
+ 	unsigned int seed;
+ 	struct timeval t;
+ 	gettimeofday(&t, NULL);
+ 	seed = squid_random() * getpid() * t.tv_sec * t.tv_usec;
+ 	squid_srandom(seed);
  	result = stat(ENTROPY_SOURCE, &st);
  	if (result != 0 || !(S_ISCHR(st.st_mode) || S_ISBLK(st.st_mode))) {
  	    debug("Entropy source " ENTROPY_SOURCE " is unavailable\n");
  	    have_urandom = NO;
! 	} else if ((urandom_file = fopen(ENTROPY_SOURCE, "r")) == NULL) {
  	    warn("Can't open entropy source " ENTROPY_SOURCE "\n");
  	    have_urandom = NO;
! 	} else
  	    have_urandom = YES;
      }
  }
  
***************
*** 349,355 ****
      domain = strdup(response.data.domain_name);
      uc(domain);
  
!     warn("target domain is %s\n", domain);
      return domain;
  }
  
--- 347,353 ----
      domain = strdup(response.data.domain_name);
      uc(domain);
  
!     debug("target domain is %s\n", domain);
      return domain;
  }
  
