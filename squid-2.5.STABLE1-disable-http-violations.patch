Index: squid/src/cf.data.pre
diff -c squid/src/cf.data.pre:1.245.2.26 squid/src/cf.data.pre:1.245.2.27
*** squid/src/cf.data.pre:1.245.2.26	Wed Sep 25 09:12:17 2002
--- squid/src/cf.data.pre	Sun Sep 29 13:05:02 2002
***************
*** 3030,3035 ****
--- 3030,3036 ----
  DOC_END
  
  NAME: header_replace
+ IFDEF: HTTP_VIOLATIONS
  TYPE: http_header_replace[]
  LOC: Config.header_access
  DEFAULT: none
Index: squid/src/cache_cf.c
diff -c squid/src/cache_cf.c:1.396.2.7 squid/src/cache_cf.c:1.396.2.8
*** squid/src/cache_cf.c:1.396.2.7	Sat Sep  7 09:13:59 2002
--- squid/src/cache_cf.c	Sun Sep 29 13:05:01 2002
***************
*** 83,94 ****
--- 83,96 ----
  static void free_all(void);
  void requirePathnameExists(const char *name, const char *path);
  static OBJH dump_config;
+ #ifdef HTTP_VIOLATIONS
  static void dump_http_header_access(StoreEntry * entry, const char *name, header_mangler header[]);
  static void parse_http_header_access(header_mangler header[]);
  static void free_http_header_access(header_mangler header[]);
  static void dump_http_header_replace(StoreEntry * entry, const char *name, header_mangler header[]);
  static void parse_http_header_replace(header_mangler * header);
  static void free_http_header_replace(header_mangler * header);
+ #endif
  static void parse_denyinfo(acl_deny_info_list ** var);
  static void dump_denyinfo(StoreEntry * entry, const char *name, acl_deny_info_list * var);
  static void free_denyinfo(acl_deny_info_list ** var);
***************
*** 897,902 ****
--- 899,905 ----
  }
  #endif
  
+ #ifdef HTTP_VIOLATIONS
  static void
  dump_http_header_access(StoreEntry * entry, const char *name, header_mangler header[])
  {
***************
*** 1016,1021 ****
--- 1019,1025 ----
  	    safe_free(header[i].replacement);
      }
  }
+ #endif
  
  void
  dump_cachedir_options(StoreEntry * entry, struct cache_dir_option *options, SwapDir * sd)
